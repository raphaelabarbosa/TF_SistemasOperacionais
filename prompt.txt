Desenvolva um código em C para o problema de concorrência abaixo, utilizando somente threads, locks e variáveis de condição (API pthreads). 
O número de threads e  parâmetros devem ser fornecidos por entrada interativa ou arquivos de configuração. 
Caso necessário utilize tempos aleatórios  rand() e sleep(). 
O progama deve ter um critério de parada. 
Coloque outputs que indiquem quais ações do problema estão sendo realizadas. Produza um makefile funcional.
Problema:
Our barbershop has three chairs, three barbers, and a waiting area that can accommodate four customers on a sofa and that has standing room for additional customers. 
Fire codes limit the total number of customers in the shop to 20. 
A customer will not enter the shop if it is filled to capacity with other customers. 
Once inside, the customer takes a seat on the sofa or stands if the sofa is filled. 
When a barber is free, the customer that has been on the sofa the longest is served and, if there are any standing customers, the one that has been in the shop the longest takes a seat on the sofa. 
When a customer’s haircut is finished, any barber can accept payment, but because there is only one cash register, payment is accepted for one customer at a time. 
The barbers divide their time among cutting hair, accepting payment, and sleeping in their chair waiting for a customer.